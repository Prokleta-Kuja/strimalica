name: Build & deploy Web

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: src/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Generate static files
        run: npm run build
      - name: Deployer
        env:
          deploy_key: ${{secrets.CS_DEPLOY_KEY}}
          deploy_url: https://${{secrets.CS_DEPLOY_URL}}/upload
        run: |
          cd dist && tar -czvf ../dist.tar.gz $(ls -A) && cd ..
          curl -f -H "Authorization: api-key $deploy_key" -F "file=@dist.tar.gz" $deploy_url
  notify:
    name: Notify
    runs-on: ubuntu-latest
    if: always()
    needs: [build]
    steps:
      - name: Success
        if: ${{ needs.build.result == 'success' }}
        continue-on-error: true
        env:
          notify_cred: ${{ secrets.NOTIFY_CRED }}
          notify_url: ${{ secrets.NOTIFY_URL }}
          app_url: ${{ secrets.URL }}
          action_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          curl \
            -u $notify_cred \
            -H "Title: Strimalica deployed" \
            -H "Tags: octopus" \
            -H "Priority: 3" \
            -H "Actions: view, GitHub, $action_url, clear=true; \
                         view, App, $app_url, clear=true" \
            -H "Content-Type: text/plain" \
            -d $'${{ github.REPOSITORY }} deployed.' \
            $notify_url
      - name: Failure
        if: ${{ needs.build.result == 'failure' }}
        continue-on-error: true
        env:
          notify_cred: ${{ secrets.NOTIFY_CRED }}
          notify_url: ${{ secrets.NOTIFY_URL }}
          app_url: ${{ secrets.URL }}
          action_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          curl \
            -u $notify_cred \
            -H "Title: Strimalica wasn't deployed" \
            -H "Tags: cursing_face" \
            -H "Priority: 4" \
            -H "Actions: view, GitHub, $action_url" \
            -H "Content-Type: text/plain" \
            -d $'${{ github.REPOSITORY }} failed.' \
            $notify_url
